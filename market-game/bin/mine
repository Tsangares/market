#!/usr/bin/env python
import sys
sys.path.insert(0,'../src')

import argparse
from pymongo import MongoClient
from getpass import getpass
from Market import Market
from Business import Business
import time,math,random
from numpy.random import normal
from db import getProfile
parser = argparse.ArgumentParser(description='Utility used to make a trasaction between you and another business.')
parser.add_argument('money', metavar='money', type=float, nargs=1, help="The name of a business you want to transact with.")
parser.add_argument('-r','--repeat', dest='repeat', action='store_true')
args=parser.parse_args()

print("Retreieving profile...")
me=getProfile()
commodity=me.market.exports[0]
if not issubclass(type(commodity),str):
    commodity=name.name

def mine():
    maxTime=30
    minTime=1
    width=maxTime-minTime
    money=args.money[0]
    maxMoney=30
    scale=(1-money/maxMoney)
    if scale > 1: scale=1
    if scale < 0: scale=0
    duration=-1
    while duration<minTime or duration>maxTime:
        duration=normal(width*scale+minTime,2*scale)
        #duration=width*scale+minTime
    steps=math.ceil(1.5*duration)
    print("Duration %.02f sec\n"%duration)
    char=str(random.choice(['Þ','.','*','-','Ø','o','#','!','^','|']))
    direction=random.choice(['>','<','^'])
    allSteps=range(steps)
    if random.choice([True,False]):
        allSteps=reversed(allSteps)
    for i in allSteps:
        print(("{:%s%ss}"%(direction,steps)).format(char*(i+1)))
        time.sleep(duration/steps)
    print("\n")
    if money>maxMoney:
        print("The most money you can spend on this is %s."%maxMoney)
        money=maxMoney
    print("You spent $%.02f to save %d secconds."%(money,maxTime-duration))
    me.spend(money)
    print("Added 1 %s dye to your profile.\n"%commodity)
    me.stock[commodity].quantity+=1
    me.save()

if args.repeat:
    while True:
        mine()
        print("Repeating!")
else:
    mine()
    me.display(commodity)
